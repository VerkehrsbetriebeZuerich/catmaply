% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catmaply.R
\name{catmaply}
\alias{catmaply}
\title{Heatmap for categorical data using plotly}
\usage{
catmaply(
  df,
  x,
  x_order,
  x_side = "top",
  x_tickangle = 90,
  y,
  y_order,
  y_side = "left",
  y_tickangle = 0,
  z,
  hover_template,
  hover_hide = F,
  color_palette = viridis::plasma,
  categorical_colorbar = F,
  categorical_col = NA,
  font_family = c("Open Sans", "verdana", "arial", "sans-serif"),
  font_size = 12,
  font_color = "#444",
  legend = T,
  legend_col,
  source = "catmaply"
)
}
\arguments{
\item{df}{data.frame or tibble holding the data.}

\item{x}{column name holding the axis values for x.}

\item{x_order}{column name holding the ordering axis values for x. if no order is specified, then x will be used for ordering x; (default:"x").}

\item{x_side}{on which side the axis labels on the x axis should appear. options: c("top", "bottom"); (default:"top").}

\item{x_tickangle}{the angle of the axis label on the x axis. options: range -180 until 180; (default:90).}

\item{y}{column name holding the axis values for y.}

\item{y_order}{column name holding the ordering axis values for y. if no order is specified, then y will be used for ordering y; (default:"y").}

\item{y_side}{on which side the axis labels on the y axis should appear. options: c("left", "right"); (default:"left").}

\item{y_tickangle}{the angle of the axis label on the x axis. options: range -180 until 180; (default:0).}

\item{z}{column name holding the values for the fields.}

\item{hover_template}{template to be used to create the hover label; (default:missing).}

\item{hover_hide}{boolean indicating if the hover label should be hidden or not; (default: FALSE).}

\item{color_palette}{a color palette vector a function that is able to create one; (default: viridis::plasma).}

\item{categorical_colorbar}{if the resulting heatmap holds categorical field values or continuous values that belong to a category; (default: FALSE).}

\item{categorical_col}{if categorical_colorbar is TRUE, then this column is used to create categories; (default: FALSE).}

\item{font_family}{the typeface that will be applied by the web browser.
The web browser will only be able to apply a font if it is available on the system which it operates.
Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system;
(default: c("Open Sans", "verdana", "arial", "sans-serif")).}

\item{font_size}{font size to be used for plot. needs to be a number greather than or equal to 1; (default: 12).}

\item{font_color}{font color to be used for plot; (default: "#444")}

\item{legend}{boolean indicating if legend should be displayed or not; (default: TRUE).}

\item{legend_col}{column to be used for legend naming; (default: z/color_palette)}

\item{source}{a character string of length 1. Match the value of this string with the source argument in event_data() to retrieve the event data corresponding to a specific plot (shiny apps can have multiple plots).}
}
\value{
plot_ly object
}
\description{
\code{catmaply} is used to easily plot categorical data on heatmaps using plotly.
It can be used to plot heatmaps on categorical variables or, otherwise, plot continuous variables with categorical color range.
}
\examples{
\dontrun{
library(catmaply)
library(viridis)
library(dplyr)

data("vbz")
df <- vbz[[3]]$data

# simple plot
catmaply(
   df,
   x='fahrt_seq',
   y = "Haltestellenlangname",
   y_order = "halt_seq",
   z = "Ausl_Kat"
)


# categorical color range and template
catmaply(
   df,
   x=fahrt_seq,
   x_order = fahrt_seq,
   x_tickangle = 15,
   y = Haltestellenlangname,
   y_order = halt_seq,
   z = Besetzung,
   categorical_colorbar = T,
   categorical_col = Ausl_Kat,
   color_palette = viridis::inferno,
   hover_template = paste(
     '<b>Fahrt Nr.</b>:', fahrt_seq,
     '<br><b>Haltestelle</b>:', Haltestellenlangname,
     '<br><b>Auslastung</b>:', Ausl_Kat,
     '<br><b>Besetzung</b>:', round(Besetzung, 2),
     '<extra></extra>'
   )
)
}

}
